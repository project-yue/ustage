<!DOCTYPE html>
<html lang="en">
  <head>
    <title>UpStage prototype</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/public/jquery-1.8.0.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/public/hollywood.js"></script>
    <script src="/public/bootstrap.js"></script>
    <link rel="stylesheet" href="/public/bootstrap.css" />
    <link rel="stylesheet" href="/public/app.css" />
  </head>
  <body>

    <div class="container-fluid">
      <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
          <a class="navbar-brand" href="#">Nodejs UpStage trial <small>with bootstrap</small></a>
        </div>
      </div>
      <div id="dashboard">
        <!--Yue: components are actually from bootstrap css file -->
        <div class="row" >
        <!-- the canvas. still work on a new way of resizing canvas dynamically -->
          <div class="col-md-8">
            <div class="container-canvas" style="border: 1px solid green">
              <canvas id="mycanvas" width="600" height="480">
                This is my fallback content.
              </canvas>
            </div>
          </div>
          <div class="col-md-4">
            <div class="row" style="border: 1px solid green">
              <b>Player</b>
              <hr />
              <div id="users" class="pre-scrollable"></div>
              <!-- <hr class="visible-xs visible-sm"/> -->
            </div>
            <div class="row">
              <!-- trying with longer input field-->
              <input type="text" class="from-control col-md-12" id="data" placeholder="send message" />
            </div>
            <div class="row" style="border: 1px solid green">
              <!-- col makes the content line wrap -->
              <div class="pre-scrollable col-md-12" id="conversation"></div>
            </div>
          </div>
        </div>
      </div>

      <script>

        function getName() {
          var name = window.names[Math.floor(Math.random() * window.names.length)];

          var tokens = name.split(',');

          if(tokens.length > 1) {
            return $.trim(tokens[1]) + " " + $.trim(tokens[0]);
          }

          return name;
        }

        // added function start
        /**
        * Builds a model box for user to create a user name.
        */
        function _buildUserCreate(){
          return '<div class="modal fade userNameModal">' +
          '<div class="modal-header">' +
          '<h3>Create a user name.</h3>' +
          '</div>' +
          '<div class="modal-body">' +
          '<input type="text" size="30" name="name" class="userNameInput">' +
          '</div>' +
          '<div class="modal-footer">' +
          '<a href="#" class="btn confirm" data-dismiss="modal">Confirm</a>' +
          '</div>' +
          '</div>';
        }
        // added function end

        function escaped(s) {
          return $("<div></div>").html(s).html();
        }

        function searchUrlFor(name) {
          return 'https://www.google.com/search?q=' + encodeURIComponent(name) + '%20site:wikipedia.org&btnI=3564';
        }

        // return date time
        function getSystemTime(){
          var dt = new Date($.now());
          var time = dt.getHours() + ":" + dt.getMinutes() + ":"+ dt.getSeconds();
          return time;
        }

        // trial start
        // $("dashboard").append(_buildUserCreate());
        // $('.userNameModal').on('shown', function () {
        //   $(".confirm").click(function(){
        //     DP.myName = $(".userNameInput").val().trim();
        //     //tell the server i'm here
        //     DP.thisObj.socket.emit('setClientId', {id : id, senderName : DP.myName});
        //   });
        // });
        // $('.userNameModal').modal("show");
        // trial end
        // $('#basicModal').modal(options);
        //
        // popup modal when load starts
        // $(window).load(function(){
        //  $('#myModal').modal('show');
        // });
        // popup modal when load ends
        var name = getName();
        $("#data").attr('placeholder', 'send message as ' + name);

        var socket = io.connect('/');

        // on connection to server, ask for user's name with an anonymous callback
        socket.on('connect', function() {
          // call the server-side function 'adduser' and send one parameter (value of prompt)
          socket.emit('adduser', name);
        });

        // listener, whenever the server emits 'updatechat', this updates the chat body
        socket.on('updatechat', function (username, data) {
          $('#conversation').prepend(getSystemTime() + ' <b>'+  escaped(username) + ':</b> ' + escaped(data) + "<br/>");
        });

        // listener, whenever the server emits 'updateusers', this updates the username list
        socket.on('updateusers', function(data) {
          $('#users').empty();
          $.each(data, function(key, value) {
            // $('#users').append('<div><a href="' + searchUrlFor(key) + '" target="_blank">' + key + '</div>');
            $('#users').prepend('<div><a href="' + searchUrlFor(key) + '" target="_blank">' + key + '</div>');
          });
        });

        socket.on('servernotification', function (data) {
          var searchUrl = searchUrlFor(data.username);
          if(data.connected) {
            if(data.to_self) data.username = "you";
            $('#conversation').prepend('connected: <a href="' + searchUrl + '" target="_blank">' + escaped(data.username) + "</a><br/>");
          } else {
            $('#conversation').prepend('disconnected: <a href="' + searchUrl + '" target="_blank">' + escaped(data.username) + "</a><br/>");
          }
          // if(data.connected) {
          //   if(data.to_self) data.username = "you";
          //   $('#conversation').append('connected: <a href="' + searchUrl + '" target="_blank">' + escaped(data.username) + "</a><br/>");
          // } else {
          //   $('#conversation').append('disconnected: <a href="' + searchUrl + '" target="_blank">' + escaped(data.username) + "</a><br/>");
          // }
        });

        // on load of page
        $(function(){
          // when the client hits ENTER on their keyboard
          $('#data').keypress(function(e) {
            if(e.which == 13) {
              var message = $('#data').val();
              $('#data').val('');
              // tell server to execute 'sendchat' and send along one parameter
              socket.emit('sendchat', message);
            }
          });
        });
      </script>
    </div>
    <!-- This is canvas drawing function with bootstrap -->
    <!-- <div class="container container-main">
      <div class="container-canvas">
        <canvas id="mycanvas" width="800" height="480">
          This is my fallback content.
        </canvas>
      </div>
    </div> -->
    <!-- reqired jquery version 1.9.1 or higher -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script>
    function draw() {
      var canvas = document.getElementById("mycanvas");

      if (canvas.getContext) {
        var ctx = canvas.getContext("2d");

        ctx.fillStyle = "rgb(200,0,0)";
        ctx.fillRect(10, 10, 55, 50);

        ctx.fillStyle = "rgba(0,0,200,0.5)";
        ctx.fillRect(30, 30, 55, 50);
      } else {
        alert("Canvas isn't supported.");
      }
    }

    $(function() {
      draw();
      // prepareCanvas();
    });
    </script>
  </body>
</html>
